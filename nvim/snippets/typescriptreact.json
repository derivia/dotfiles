{"slidernumbered":{"body":["import React, { useState } from \"react\";","","interface ScoreSliderProps {","\tdefaultValue?: number;","\tonChange?: (value: number) => void;","\tclassName?: string;","\ttitle: string;","}","","const SliderNumbered = ({","\tdefaultValue = 75,","\tonChange,","\tclassName = \"\",","\ttitle,","}: ScoreSliderProps) => {","\tconst [value, setValue] = useState(defaultValue);","\tconst [isHovered, setIsHovered] = useState(false);","","\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {","\t\tconst newValue = Number(e.target.value);","\t\tsetValue(newValue);","\t\tonChange?.(newValue);","\t};","","\treturn (","\t\t<div className={`w-full max-w-sm ${className}`}>","\t\t\t<h2 className=\"self-center font-medium text-xl mb-2\">{title}<\/h2>","","\t\t\t<div className=\"flex items-center gap-4\">","\t\t\t\t<div className=\"relative flex-1\">","\t\t\t\t\t<input","\t\t\t\t\t\ttype=\"range\"","\t\t\t\t\t\tmin={0}","\t\t\t\t\t\tmax={100}","\t\t\t\t\t\tvalue={value}","\t\t\t\t\t\tonChange={handleChange}","\t\t\t\t\t\tclassName={`","              w-full h-2 rounded-lg cursor-pointer","              appearance-none","            `}","\t\t\t\t\t\tstyle={{","\t\t\t\t\t\t\tbackground: `linear-gradient(to right, var(--accent) ${value}%, #e2e2e2 ${value}%)`,","\t\t\t\t\t\t}}","\t\t\t\t\t\tonMouseEnter={() => setIsHovered(true)}","\t\t\t\t\t\tonMouseLeave={() => setIsHovered(false)}","\t\t\t\t\t\/>","","\t\t\t\t\t{isHovered && (","\t\t\t\t\t\t<div","\t\t\t\t\t\t\tclassName=\"absolute top-0 left-1\/2 transform -translate-x-1\/2 -translate-y-6 bg-gray-700 text-white text-xs py-1 px-2 rounded-md\"","\t\t\t\t\t\t\tstyle={{ left: `calc(${value}% - 10px)` }}","\t\t\t\t\t\t>","\t\t\t\t\t\t\t{value}%","\t\t\t\t\t\t<\/div>","\t\t\t\t\t)}","","\t\t\t\t\t<div className=\"flex justify-between text-xs text-gray-500 mt-1\">","\t\t\t\t\t\t<span>0%<\/span>","\t\t\t\t\t\t<span>50%<\/span>","\t\t\t\t\t\t<span>100%<\/span>","\t\t\t\t\t<\/div>","\t\t\t\t<\/div>","\t\t\t<\/div>","\t\t<\/div>","\t);","};","","export default SliderNumbered;"],"prefix":"slidernumbered"},"notfound":{"prefix":"notfound","body":["import { Link } from \"react-router-dom\";","","\/*"," * Requires: react, react-router-dom, typescript & tailwindcss"," * Default 404 - Not found page."," *\/","const NotFound = () => {","\treturn (","\t\t<div className=\"self-center text-[2rem] flex flex-col items-center\">","\t\t\t<div>404 - Not found<\/div>","\t\t\t<span className=\"rounded bg-slate-400 p-2\">","\t\t\t\tüè†Ô∏è Go <Link to=\"\/\">Home<\/Link>","\t\t\t<\/span>","\t\t<\/div>","\t);","};","","export default NotFound;"]},"footer":{"prefix":"footer","body":["import { Link } from \"react-router-dom\";","","const Footer = () => {","\treturn (","\t\t<footer className=\"fixed bottom-0 left-0 right-0\">","\t\t\t<Link to=\"\/\" className=\"block p-4\">","\t\t\t\t<img className=\"w-4 h-4\" src=\"home.svg\" alt=\"Home icon\"><\/img>","\t\t\t<\/Link>","\t\t<\/footer>","\t);","};","","export default Footer;"]},"handlesubmit":{"prefix":"handlesubmit","body":["const handleSubmit = (e: FormEvent<HTMLFormElement>) => {","\te.preventDefault();","};"]},"loaderror":{"body":["const [loading, setLoading] = useState<boolean>(false);","const [error, setError] = useState<string>(\"\");"],"prefix":"loaderror"},"rta":{"prefix":"rta","body":["import { useEffect } from \"react\";","","interface TextAreaResizableProps {","  placeholder?: string;","  className?: string;","  form?: string;","}","","export default function TextAreaResizable({","  placeholder,","  className,","  form,","}: TextAreaResizableProps) {","  useEffect(() => {","    const tx = document.getElementsByTagName(\"textarea\");","","    const onInput = (event: Event) => {","      const target = event.target as HTMLTextAreaElement;","      if (target) {","        target.style.height = \"auto\";","        target.style.height = `\\${target.scrollHeight}px`;","      }","    };","    for (let i = 0; i < tx.length; i++) {","      tx[i].style.height = `\\${tx[i].scrollHeight}px`;","      tx[i].style.overflowY = \"hidden\";","      tx[i].addEventListener(\"input\", onInput);","    }","    return () => {","      for (let i = 0; i < tx.length; i++) {","        tx[i].removeEventListener(\"input\", onInput);","      }","    };","  }, []);","","  return (","    <textarea","      className={className}","      form={form}","      placeholder={placeholder || \"Type something here\"}","    ><\/textarea>","  );","}"]},"recf":{"prefix":"recf","body":["const ${1:${TM_FILENAME_BASE}} = () => {","  return (","    <div>${1:first}<\/div>","  )","}","","export default ${1:first}"]}}